monitor philosophes
  type etat = enum (pense, afaim, mange)

type philosophes = monitor
  /* 1 = pense, 2 = afaim, 3 = mange */
  var etat : array[5] of (1, 2, 3)
      attente : array[5]

  procedure prendre(i:5)
    begin
      etat[i] := afaim
      teste(i)
      if etat[i] != mange then attente[i].wait
    end

  procedure deposer(i:5)
    begin
      etat[i] := pense
      teste((i-1) mod 5)
      teste((i+1) mod 5)
    end

  procedure test(k:5)
    begin
      if (etat[(k+1) mod 5] != mange) and (etat[k] == afaim) and (etat[(k-1) mod 5] != mange)
      then begin
        etat[k] := mange
        attente[k].signal
      end
    end
  begin
    for 1 := 0 to 4 do etat[i] := pense
  end




#resource main()

#end
