resource boutiqueBarbier()
  const nbPlaces:int := 5

  sem reveil := 0
  sem deplacement := 1
  sem clientPret := 0
  sem porteSortie := 0
  sem clientSorti := 0
  sem prochain := 0

  var nbClients:int := 0
  var barbierDort:bool := true



  process barbier
     do true ->
       P(reveil)
       if (barbierDort) -> write("Le barbier se reveille") fi
       barbierDort := false
       V(reveil)
       P(clientPret)
       write("Barbier travaille")
       nap(int(random(1)*400))

       P(deplacement)
       write("Le barbier va ouvrir la porte")
       nap(5)
       V(deplacement)
       V(porteSortie)
       write("La porte de sortie est ouverte")
       P(clientSorti)
       P(porteSortie)
       write("La porte de sortie est ferme")
       P(deplacement)
       write("Le barbier retourne devant sa chaise")
       nap(5)
       V(deplacement)

       if (nbClients = 0) ->
        P(reveil)
        write("Le barbier s'endort")
        barbierDort := true
       []else -> V(prochain)
       fi
     od
  end

  process client(i:=1 to 10)
    var j := 0
    do j < 10 ->
      nap(int(random(1)*500))
      nbClients++
      write("Le client", i, "arrive")
      if (nbClients > nbPlaces +1) ->
        write("La boutique est pleine, le client", i, "part")
        nbClients--
        next
      [](barbierDort) ->
        V(reveil)
        write("Le client", i, "reveille le barbier")
      []else ->
        P(deplacement)
        write("Le client", i, "se deplace vers une chaise de la salle d'attente")
        nap(5)
        V(deplacement)
        write("Le client", i, "attend son tour sur une chaise dans la salle d'attente")
        P(prochain)
      fi

      P(deplacement)
      write("Le client", i, "se deplace vers la chaise du barbier")
      nap(5)
      V(deplacement)
      V(clientPret)
      write("Le client", i, "est assis sur la chaise du barbier")

      P(porteSortie)
      V(porteSortie)
      P(deplacement)
      write("Le client", i, "sort de la boutique")
      V(deplacement)
      nbClients--
      V(clientSorti)

      j++
    od
  end
end
